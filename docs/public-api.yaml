---
openapi: 3.0.0
info:
  title: Public API
  version: 1.0.0
servers:
  - url: http://example.domain/api/v1/
    description: Example Server
tags:
  - name: identity
    description: Operations about user
  - name: ordering
    description: Order operations
  - name: billing
    description: Billing operations
  - name: notifications
    description: Notifications
security:
  - JWT: []
paths:
  /identity/register:
    post:
      security: []
      tags:
        - identity
      summary: Register a user
      operationId: registerUser
      requestBody:
        description: Registration form
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Login'
                - type: object
                  properties:
                    firstName:
                      type: string
                    lastName:
                      type: string
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /identity/login:
    post:
      security: []
      tags:
        - identity
      summary: Login to the system
      operationId: loginUser
      requestBody:
        description: Login form
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: Login response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /identity/logout:
    post:
      tags:
        - identity
      summary: Logout from the system
      operationId: logoutUser
      responses:
        "204":
          description: Logout succeeded
  /identity/profile:
    get:
      tags:
        - identity
      description: Returns a current user profile
      operationId: getCurrentUser
      responses:
        "200":
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - identity
      description: Update current user profile
      operationId: updateCurrentUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              sample-user:
                summary: Example
                value:
                  firstName: Julie
                  lastName: Doe
                  email: bestjohn@doe.com
                  phone: +71004242424
      responses:
        "200":
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /ordering/orders:
    get:
      tags: [ordering]
      description: Get current user orders
      operationId: getOrders
      responses:
        "200":
          description: Order response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags: [ordering]
      description: Create a new order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        "204":
          description: Order created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /billing/account:
    get:
      tags: [billing]
      description: Read current user account
      operationId: getBillingAccount
      responses:
        "200":
          description: Billing account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingAccount'
  /billing/account/deposit:
    post:
      tags: [billing]
      description: Deposit money to user account
      operationId: depositMoney
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingUpdate'
      responses:
        "204":
          description: Success
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /billing/account/withdraw:
    post:
      tags: [billing]
      description: Withdraw money from user account
      operationId: withdrawMoney
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillingUpdate'
      responses:
        "204":
          description: Success
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /notifications:
    get:
      tags: [ notifications ]
      description: Get current user notifications
      operationId: getNotifications
      responses:
        "200":
          description: Notifications response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'

components:
  securitySchemes:
    JWT:
      type: apiKey
      name: accessToken
      in: cookie
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
          format: phone
    Login:
      type: object
      required: [ email, password ]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    AccessToken:
      type: object
      required: [ accessToken ]
      properties:
        accessToken:
          type: string
    Order:
      type: object
      required: [ id, price ]
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        price:
          type: number
          minimum: 1
        createdAt:
          type: string
          format: date-time
          readOnly: true
    BillingAccount:
      type: object
      properties:
        amount:
          type: number
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    BillingUpdate:
      type: object
      required: [amount]
      properties:
        amount:
          type: number
    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        message:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
